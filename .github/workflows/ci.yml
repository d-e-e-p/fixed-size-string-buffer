---
name: CI
run-name: ${{ github.actor }} CI
on:
  push:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
jobs:
  build-and-test:
    runs-on: ${{ matrix.sys.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        sys:
          - { os: windows-latest, shell: bash }
          - { os: ubuntu-latest,  shell: bash }
          - { os: macos-latest,   shell: bash }
        configuration:
          - release
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}
    env:
      OS: ${{ matrix.sys.os }}
      CTEST_OUTPUT_ON_FAILURE: 1
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules
      HOMEBREW_NO_AUTO_UPDATE: 1


    steps:
      - run: |
          echo "üéâ job triggered by ${{ github.event_name }} event."
          echo "üêß running on ${{ runner.os }} server branch ${{ github.ref }} repository  ${{ github.repository }}."
          echo "üí° cloning ${{ github.repository }} to ${{ runner.os }}"

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/cache@v3
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

            #      - name: change encoding to utf8 with BOM
            #if: runner.os == 'Windows'
            #shell: bash
            #run: make windows_unicode_fix

      - run: make ${{ matrix.configuration }}
      - run: make -j4 test
      - run: make -j4 bench
      - run: make -j4 coverage

      - name: Upload coverage reports to Codecov
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 
          file: build/coverage/coverage.info
          verbose: true 

      - run: echo "üçè This job's status is ${{ job.status }}."
